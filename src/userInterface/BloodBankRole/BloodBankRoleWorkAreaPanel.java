/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.BloodBankRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.BloodBankOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Workqueue.AcceptDonationWorkRequest;
import Business.Workqueue.DoctorWorkRequest;
import Business.Workqueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deepankkhurana
 */


    /**
     * Creates new form BloodBankRoleWorkAreaPanel
     */
  public class BloodBankRoleWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form BloodBankRoleWorkAreaPanel
     */
    private final JPanel userProcessContainer;
    private final BloodBankOrganization organization;
    private final Enterprise enterprise;
    private final UserAccount userAccount;
    private final ArrayList<Organization> orgs;
    private final Network network;

    public BloodBankRoleWorkAreaPanel(JPanel userProcessContainer, UserAccount account, BloodBankOrganization organization, Enterprise enterprise, EcoSystem system, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.orgs = new ArrayList<>();
        this.network = network;
        try {
            enterpriseLbl.setText(organization.getName());
            networkLbl.setText(network.getName());
            for (Network n : system.getNetworkList()) {
                if (n.getName().equals(network.getName())) {
                    for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                            orgs.add(o);
                        }
                    }
                }
            }
            populateRequestTable();
            btnSend.setEnabled(false);
        } catch (NullPointerException ne) {
            JOptionPane.showMessageDialog(null, "Error : "+ne.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : "+e.getMessage());
        }
    }

    public void populateRequestTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

            model.setRowCount(0);
            for (Organization org : orgs) {
                if (org instanceof BloodBankOrganization) {
                    for (AcceptDonationWorkRequest request : org.getWorkQueue().getDonationWorkRequestList()) {
                        if (request.getDonor().getNetwork().equals(network.getName())) {
                            Object[] row = new Object[6];
                            row[0] = request;
                            row[1] = request.getDonor().getEmailid();
                            row[2] = request.getDonor().getContactNumber();
                            row[3] = request.getDonor().getAddress();
                            row[4] = request.getDonor().getBloodGrp();
                            row[5] = request.getSender() == null ? null : request.getSender().getEmployee().getEmpName();
                            model.addRow(row);
                        }
                    }
                }
            }
        } catch (NullPointerException ne) {
            JOptionPane.showMessageDialog(null, "Error : "+ne.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : "+e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        enterpriseLbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        networkLbl = new javax.swing.JLabel();
        scrollPane1 = new java.awt.ScrollPane();
        scrollpanel1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        btnTrack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 140, 190));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jLabel1.setText("Donation Received at");

        enterpriseLbl.setText("<Enterprise Name>");

        jLabel2.setText("Network");

        networkLbl.setText("<NetworkName>");

        scrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Email", "Contact", "Address", "Blood Type", "Accepted By"
            }
        ));
        workRequestJTable.setPreferredSize(new java.awt.Dimension(450, 404));
        scrollpanel1.setViewportView(workRequestJTable);

        scrollPane1.add(scrollpanel1);

        jLabel3.setText("Accept Request For Donation :");

        jLabel4.setText("Send Request to Doctor for Approval: ");

        jLabel5.setText("Track Previous Requests:");

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnTrack.setText("Track");
        btnTrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(26, 26, 26)
                                .addComponent(enterpriseLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(networkLbl)
                                .addGap(120, 120, 120))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAccept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTrack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(enterpriseLbl)
                            .addComponent(jLabel2)
                            .addComponent(networkLbl))
                        .addGap(59, 59, 59)
                        .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnAccept))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnSend))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btnTrack))
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a donation to process.");
            return;
        }
        try {
            String approvedBy = String.valueOf(workRequestJTable.getValueAt(selectedRow, 5));
            AcceptDonationWorkRequest req = (AcceptDonationWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            String donationType = req.getDonor().getDonationType();
            String bloodgroup = String.valueOf(workRequestJTable.getValueAt(selectedRow, 4));

            for (Organization org : orgs) {
                if (org instanceof DoctorOrganization) {
                    DoctorWorkRequest doctorRequest = new DoctorWorkRequest();
                    doctorRequest.setDonationType(donationType);
                    doctorRequest.setDescription(bloodgroup);
                    doctorRequest.setStatus("Sent");
                    doctorRequest.setRequestedBy(approvedBy);
                    doctorRequest.setDonorEmailId(req.getDonor().getEmailid());
                    doctorRequest.setNetwork(network.getName());

                    org.getWorkQueue().getDoctorWorkRequestList().add(doctorRequest);

                    JOptionPane.showMessageDialog(null, "Request sent");
                    break;
                }

            }
        } catch (NullPointerException ne) {
            JOptionPane.showMessageDialog(null, "Error : "+ne.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : "+e.getMessage());
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnTrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrackActionPerformed
        // TODO add your handling code here:
        try {
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            for (Organization o : orgs) {
                if (o instanceof DoctorOrganization) {
                    userProcessContainer.add("TrackRequestStatusJPanel", new userInterface.BloodBankRole.TrackRequestStatusJPanel(userProcessContainer, userAccount, enterprise, o.getWorkQueue().getDoctorWorkRequestList()));
                    layout.next(userProcessContainer);
                    break;
                }
            }
        } catch (NullPointerException ne) {
            JOptionPane.showMessageDialog(null, "Error : "+ne.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : "+e.getMessage());
        }
    }//GEN-LAST:event_btnTrackActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a donation to collect.");
            return;
        }
        try {
            String approvedBy = String.valueOf(workRequestJTable.getValueAt(selectedRow, 5));
            if (approvedBy.equals("null")) {
                WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
                request.setSender(userAccount);
                populateRequestTable();
                AcceptDonationWorkRequest req = (AcceptDonationWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);

                btnSend.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Already processed.");
            }
        } catch (NullPointerException ne) {
            JOptionPane.showMessageDialog(null, "Error : "+ne.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : "+e.getMessage());
        }

    }//GEN-LAST:event_btnAcceptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnTrack;
    private javax.swing.JLabel enterpriseLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel networkLbl;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JScrollPane scrollpanel1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
    }
